<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.jufis</groupId>
	<artifactId>docker-rest-server</artifactId>
	<version>2.0.1-GA</version>
	<name>docker-rest-server</name>
	<description>docker-rest-server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.3.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}-${git.buildnumber}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- enable JGit plugin -->
			<plugin>
				<groupId>ru.concerteza.buildnumber</groupId>
				<artifactId>maven-jgit-buildnumber-plugin</artifactId>
				<version>1.2.10</version>
				<executions>
					<execution>
						<id>git-buildnumber</id>
						<goals>
							<goal>extract-buildnumber</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<javaScriptBuildnumberCallback>
								((tag!=null &amp;&amp;
								tag.trim().length>0)?tag:"NOTAG") + "_" + branch + "_" +
								shortRevision + "_" + commitsCount
							</javaScriptBuildnumberCallback>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- enable docker maven plugin -->
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.11.3</version>
				<configuration>
					<dockerHost>tcp://0.0.0.0:2375</dockerHost>
					<useColor>true</useColor>
					<verbose>true</verbose>
					<registry>registry.jufis.net:443</registry>
					<authConfig>
						<username></username>
						<password></password>
					</authConfig>
					<images>
						<image>
							<alias>dockerServer</alias>
							<!-- if there is no . or : before / like here there is no registry 
								defined, so registry tag in use now -->
							<name>jufis/docker-rest-server:${git.buildnumber}</name>

							<build>
								<from>dockerfile/java:oracle-java7</from>
								<maintainer>jufis@jufis.net</maintainer>
								<tags>
									<tag>${git.buildnumber}</tag>
								</tags>
								<ports>
									<port>8080</port>
								</ports>
								<volumes>
									<volume>/tmp</volume>
								</volumes>
								<command>java -jar
									/maven/${project.artifactId}-${project.version}-${git.buildnumber}.jar</command>
								<assembly>
									<basedir>/maven</basedir>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>

							<run>
								<hostname>restserver</hostname>
								<log>
									<enabled>true</enabled>
									<prefix>REST_SERVER</prefix>
									<date>DEFAULT</date>
									<color>red</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<!-- Connect this plugin to the maven lifecycle around the integration-test 
					phase. I.e. start the container in pre-integration-test and stop it in post-integration-test. -->
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- specify manifest fields -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Specification-Title>${project.name}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Specification-Vendor>${project.specification_vendor}</Specification-Vendor>
							<Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
							<Implementation-Version>${git.revision}</Implementation-Version>
							<Implementation-Vendor>${project.implementation_vendor}</Implementation-Vendor>
							<X-Git-Branch>${git.branch}</X-Git-Branch>
							<X-Git-Tag>${git.tag}</X-Git-Tag>
							<X-Git-Commits-Count>${git.commitsCount}</X-Git-Commits-Count>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>