<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>net.jufis</groupId>
	<artifactId>docker-rest-server</artifactId>
	<version>1.0.1-GA</version>
	<name>docker-rest-server</name>
	<description>docker-rest-server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.3.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}-${git.buildnumber}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- enable JGit plugin -->
			<plugin>
				<groupId>ru.concerteza.buildnumber</groupId>
				<artifactId>maven-jgit-buildnumber-plugin</artifactId>
				<version>1.2.10</version>
				<executions>
					<execution>
						<id>git-buildnumber</id>
						<goals>
							<goal>extract-buildnumber</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<javaScriptBuildnumberCallback>
								((tag!=null &amp;&amp; tag.trim().length>0)?tag:"NOTAG") + "_" + branch + "_" + shortRevision + "_" + commitsCount
							</javaScriptBuildnumberCallback>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.alexecollins.docker</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>2.7.0</version>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>package</goal>
							<goal>start</goal>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- out of the box, you shoud not need to have these, as they'll use 
						sensible defaults -->
					<!-- (optional) your installed version -->
					<!-- <version>1.13</version> -->
					<!-- (optional) if you want to push to a private repo -->
					<!-- <username>alexec</username> -->
					<!-- <email>alex.e.c@gmail.com</email> -->
					<serverAddress>http://localhost:5000</serverAddress>
					<!-- (optional) change here if you are using another port/host, e.g. 
						4243 -->
					<!-- <host>http://localhost:5000</host> -->
					<!-- use local registry or remote from above -->
					<host>unix:///var/run/docker.sock</host>
					<!-- (optional) if you need to run with configured SSL certificates -->
					<!-- <dockerCertPath>${user.home}/.docker</dockerCertPath> -->
					<!-- (optional) remove images created by Dockerfile (default false) -->
					<!-- <removeIntermediateImages>false</removeIntermediateImages> -->
					<!-- (optional) do/do not cache images (default true), disable to get 
						the freshest images -->
					<cache>false</cache>
					<!-- (optional) exclude certain images -->
					<!-- <exclude>app,other</exclude> -->
					<!-- (optional) ignore problems with permission errors (e.g. if running 
						on CircleCI -->
					<!-- <permissionErrorTolerant>true</permissionErrorTolerant> -->
				</configuration>
				<dependencies>
					<!-- only needed if you are using Boot2Docker -->
					<dependency>
						<groupId>com.alexecollins.docker</groupId>
						<artifactId>docker-java-orchestration-plugin-boot2docker</artifactId>
						<version>2.7.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- specify manifest fields -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Specification-Title>${project.name}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Specification-Vendor>${project.specification_vendor}</Specification-Vendor>
							<Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
							<Implementation-Version>${git.revision}</Implementation-Version>
							<Implementation-Vendor>${project.implementation_vendor}</Implementation-Vendor>
							<X-Git-Branch>${git.branch}</X-Git-Branch>
							<X-Git-Tag>${git.tag}</X-Git-Tag>
							<X-Git-Commits-Count>${git.commitsCount}</X-Git-Commits-Count>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>